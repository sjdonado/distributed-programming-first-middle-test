/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.tcpclient;

import com.mycompany.tcpmanager.TCPClientManager;
import com.mycompany.tcpmanager.TCPServiceManagerCallerInterface;
import com.mycompany.webmanagerclient.SharedFile;
import com.mycompany.webmanagerclient.WebManagerClient;
import java.io.File;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author sjdonado
 */
public class GUI extends javax.swing.JFrame implements TCPServiceManagerCallerInterface {
    
    TCPClientManager tcpClientManager;
    private SharedFile[] sharedFiles;
    private SharedFile selectedFile;
    private WebManagerClient webManagerClient;
    private final DefaultTableModel fileTableModel;
    private final SimpleDateFormat FILE_DATE_FORMAT = 
        new SimpleDateFormat("dd/mm/yyyy h:mm a"); 
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setLocationRelativeTo(null); 
        this.fileTableModel = (DefaultTableModel) this.jTableFiles.getModel();
        this.jTableFiles.getSelectionModel()
            .addListSelectionListener(new FileSelectionHandler(this));
   }
    
    public void selectFile(int index) {
        this.btnDownloadFile.setEnabled(true);
        this.selectedFile = this.sharedFiles[index];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        fileCombo = new javax.swing.JComboBox<>();
        selectDownFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        labelServerMessage = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textServerIP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textServerPort = new javax.swing.JTextField();
        buttonConnectToServer = new javax.swing.JButton();
        buttonSelectFile = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFiles = new javax.swing.JTable();
        btnDownloadFile = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtDownloadServerIp = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDownloadServerPort = new javax.swing.JTextField();
        btnWebManagerConnection = new javax.swing.JButton();
        btnWebManagerSync = new javax.swing.JButton();

        jFrame1.setMinimumSize(new java.awt.Dimension(305, 294));

        fileCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        selectDownFile.setText("Select File");
        selectDownFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDownFileActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("File List");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(selectDownFile)
                .addContainerGap())
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectDownFile)
                    .addComponent(fileCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Server IP:");

        textServerIP.setText("127.0.0.1");

        jLabel2.setText("Port:");

        textServerPort.setText("9090");

        buttonConnectToServer.setText("Connect");
        buttonConnectToServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConnectToServerActionPerformed(evt);
            }
        });

        buttonSelectFile.setText("Select file");
        buttonSelectFile.setEnabled(false);
        buttonSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSelectFile)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonConnectToServer)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonConnectToServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSelectFile)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Upload", jPanel1);

        jTableFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Created At", "Size (mb)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFiles.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableFiles);
        if (jTableFiles.getColumnModel().getColumnCount() > 0) {
            jTableFiles.getColumnModel().getColumn(2).setPreferredWidth(5);
        }

        btnDownloadFile.setText("Download");
        btnDownloadFile.setEnabled(false);
        btnDownloadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadFileActionPerformed(evt);
            }
        });

        jLabel4.setText("Server IP:");

        txtDownloadServerIp.setText("127.0.0.1");

        jLabel5.setText("Port:");

        txtDownloadServerPort.setText("8080");
        txtDownloadServerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDownloadServerPortActionPerformed(evt);
            }
        });

        btnWebManagerConnection.setText("Connect");
        btnWebManagerConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWebManagerConnectionActionPerformed(evt);
            }
        });

        btnWebManagerSync.setText("Sync");
        btnWebManagerSync.setEnabled(false);
        btnWebManagerSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWebManagerSyncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(6, 6, 6)
                        .addComponent(txtDownloadServerIp, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(txtDownloadServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnWebManagerConnection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWebManagerSync))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDownloadFile)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDownloadServerIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDownloadServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnWebManagerConnection)
                        .addComponent(btnWebManagerSync))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDownloadFile)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Download", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelServerMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelServerMessage))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonConnectToServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConnectToServerActionPerformed
        this.tcpClientManager = new TCPClientManager(
                this.textServerIP.getText(),
                Integer.parseInt(this.textServerPort.getText()),
                this
        );
        buttonSelectFile.setEnabled(true);
    }//GEN-LAST:event_buttonConnectToServerActionPerformed

    private void buttonSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectFileActionPerformed
        int returnVal = this.fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (this.tcpClientManager != null) {
                this.tcpClientManager.sendFile(file);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_buttonSelectFileActionPerformed

    private void selectDownFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDownFileActionPerformed
        
    }//GEN-LAST:event_selectDownFileActionPerformed

    private void btnWebManagerConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWebManagerConnectionActionPerformed
        this.webManagerClient = new WebManagerClient(
                this.txtDownloadServerIp.getText(),
                Integer.parseInt(this.txtDownloadServerPort.getText())
        );
        this.btnWebManagerConnection.setEnabled(false);
        this.btnWebManagerSync.setEnabled(true);
        this.fetchFiles();
    }//GEN-LAST:event_btnWebManagerConnectionActionPerformed

    private void fetchFiles() {
        fileTableModel.setRowCount(0);
        this.sharedFiles = this.webManagerClient.fetchFiles();
        for(SharedFile file : this.sharedFiles) {
            String parsedFileSize = FileUtils
                .byteCountToDisplaySize(file.getSize());
            String parsedDate = FILE_DATE_FORMAT.format(file.getCreatedAt());
            fileTableModel.addRow(
                new Object[]{file.getName(), parsedDate, parsedFileSize}
            );
        }
    }
    
    private void downloadFile() {
        if (this.webManagerClient.downloadFile(this.selectedFile.getName())) {
            JOptionPane.showMessageDialog(
                jFrame1,
                "File downloaded successfully!"
            );
        } else {
            JOptionPane.showMessageDialog(
                jFrame1, 
                "File didn't downloaded successfully",
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    private void btnWebManagerSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWebManagerSyncActionPerformed
        this.btnDownloadFile.setEnabled(false);
        this.fetchFiles();
    }//GEN-LAST:event_btnWebManagerSyncActionPerformed

    private void txtDownloadServerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDownloadServerPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDownloadServerPortActionPerformed

    private void btnDownloadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadFileActionPerformed
        this.downloadFile();
    }//GEN-LAST:event_btnDownloadFileActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    class FileSelectionHandler implements ListSelectionListener {
        private final GUI context;
        public FileSelectionHandler(GUI context) {
            this.context = context;
        }
        
        @Override
        public void valueChanged(ListSelectionEvent e) { 
            ListSelectionModel lsm = (ListSelectionModel)e.getSource();
            if (!lsm.isSelectionEmpty()) {
                int index = lsm.getMinSelectionIndex();
                this.context.selectFile(index);
            }
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownloadFile;
    private javax.swing.JButton btnWebManagerConnection;
    private javax.swing.JButton btnWebManagerSync;
    private javax.swing.JButton buttonConnectToServer;
    private javax.swing.JButton buttonSelectFile;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JComboBox<String> fileCombo;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableFiles;
    private javax.swing.JLabel labelServerMessage;
    private javax.swing.JButton selectDownFile;
    private javax.swing.JTextField textServerIP;
    private javax.swing.JTextField textServerPort;
    private javax.swing.JTextField txtDownloadServerIp;
    private javax.swing.JTextField txtDownloadServerPort;
    // End of variables declaration//GEN-END:variables

   
    @Override
    public void messageReceivedFromClient(Socket clientSocket, String message) {
        Logger.getLogger(
                GUI.class.getName()).log(Level.INFO, message);
        this.labelServerMessage.setText(message + "\n");
    }
    
    @Override
    public void chunkReceivedFromClient(Socket clientSocket, byte[] data) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void errorHasBeenThrown(Exception ex) {
        Logger.getLogger(
                GUI.class.getName()).log(Level.SEVERE, null, ex);
        this.labelServerMessage.setText(ex.getMessage() + "\n");
    }

}
